<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ibm.wlp.microservices</groupId>
  <artifactId>ws-template</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>ws-template</name>

  <description></description>

  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>1.8</java.version>
    <jee.version>7.0</jee.version>

    <cf.maven.plugin.version>1.1.3</cf.maven.plugin.version>
    <liberty.maven.plugin.version>1.1-SNAPSHOT</liberty.maven.plugin.version>
    <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
    <maven.enforcer.plugin.version>1.4</maven.enforcer.plugin.version>
    <maven.javadoc.plugin.version>2.10.3</maven.javadoc.plugin.version>
    <maven.resources.plugin.version>2.7</maven.resources.plugin.version>
    <maven.war.plugin.version>2.6</maven.war.plugin.version>
  </properties>

  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/target/mvn-repo</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-web-api</artifactId>
      <version>${jee.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.cloudfoundry</groupId>
          <artifactId>cf-maven-plugin</artifactId>
          <version>${cf.maven.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>net.wasdev.wlp.maven.plugins</groupId>
          <artifactId>liberty-maven-plugin</artifactId>
          <version>${liberty.maven.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>java-configuration</id>

      <activation>
        <property>
          <name>!skipJavaConfiguration</name>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>${java.version}</source>
              <target>${java.version}</target>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[${java.version},)</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>

            <configuration>
              <source>${java.version}</source>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>liberty-install</id>

      <activation>
        <file>
          <missing>target/liberty/wlp/bin</missing>
        </file>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-liberty</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>create-server</goal>
                  <goal>install-feature</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>liberty-configuration</id>

      <activation>
        <property>
          <name>!skipLibertyConfiguration</name>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/apps</outputDirectory>
              <warName>${project.name}</warName>
            </configuration>
          </plugin>

          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>

            <configuration>
              <install>
                <!-- license code specified in ~/.m2/settings.xml -->
                <licenseCode>${ibm.liberty.license}</licenseCode>
              </install>

              <configFile>src/main/wlp/server.xml</configFile>
              <packageFile>${project.build.directory}/${project.name}-server.zip</packageFile>
              <include>usr</include>

              <bootstrapProperties>
                <Port>9080</Port>
              </bootstrapProperties>

              <features>
                <acceptLicense>true</acceptLicense>
                <whenFileExists>ignore</whenFileExists>
                <feature>webProfile-7.0</feature>
              </features>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>liberty-watch</id>

      <activation>
        <property>
          <name>watch</name>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>

            <executions>
              <execution>
                <id>create-watch-server</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>create-server</goal>
                </goals>
              </execution>
              <execution>
                <id>run-watch-server</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>run-server</goal>
                </goals>
              </execution>
            </executions>

            <configuration>
              <serverName>watchServer</serverName>
              <template>defaultServer</template>
              <configFile>src/main/wlp/server.watch.xml</configFile>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>

            <executions>
              <execution>
                <id>copy-war-xml</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/liberty/wlp/usr/servers/watchServer/dropins</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/wlp</directory>
                      <filtering>true</filtering>
                      <includes>
                        <include>**/*.war.xml</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>bluemix-configuration</id>

      <activation>
        <property>
          <name>bluemix</name>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>

            <executions>
              <execution>
                <id>package liberty</id>
                <phase>package</phase>
                <goals>
                  <goal>package-server</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cf-maven-plugin</artifactId>

            <executions>
              <execution>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>

            <configuration>
              <path>${project.build.directory}/${project.name}-server.zip</path>
              <server>bluemix</server>
              <target>https://api.ng.bluemix.net</target>
              <org>info@michaelwellner.de</org>
              <space>dev</space>
              <appname>wellnr-${project.name}</appname>
              <memory>512</memory>
              <diskQuota>1024</diskQuota>
              <healthCheckTimeout>60</healthCheckTimeout>
              <!--
              <services>
                <service>
                  <name>sqldb</name>
                  <label>sqldb</label>
                  <plan>sqldb_free</plan>
                </service>
              </services>
            -->
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <pluginRepositories>
    <!-- Configure Sonatype OSS Maven snapshots repository -->
    <pluginRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>
</project>
